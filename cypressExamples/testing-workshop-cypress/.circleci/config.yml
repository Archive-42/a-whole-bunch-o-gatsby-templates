# Check https://circleci.com/docs/2.0/ for more details
# for config.yml syntax see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

orbs:
  # import Cypress orb by specifying an exact version x.y.z
  # or the latest version 1.x.x using "@1" syntax
  # https://github.com/cypress-io/circleci-orb
  cypress: cypress-io/cypress@1

commands:
  restore-cached-dependencies:
    description: restores the NPM cache and the cached Cypress binary
    steps:
      # Download and cache dependencies for the app and for tests
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
          # do not fall back to the previous cache
          # otherwise we will be "rolling over" previous Cypress binaries
          # adding newer versions until the cache is huge
          # we need "cypress cache prune" command

  install-dependencies:
    # Install NPM dependencies quickly using "npm ci"
    # https://on.cypress.io/continuous-integration
    # https://docs.npmjs.com/cli/ci
    description: installs npm dependencies
    steps:
      # Install NPM dependencies quickly
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Install TodoMVC dependencies
          command: npm ci
          working_directory: todomvc
      - run:
          name: Install TodoMVC Redux dependencies
          command: npm ci
          working_directory: todomvc-redux
      # show all installed Cypress versions
      - run: DEBUG=cypress:cli npx cypress cache path
      - run: DEBUG=cypress:cli npx cypress cache list
      - run:
          name: Verify cypress
          command: npx cypress verify

  cache-dependencies:
    description: Save NPM cache and Cypress binary
    steps:
      - save_cache:
          paths:
            # all NPM modules
            - ~/.npm
            # Cypress binary (or yarn dependencies)
            - ~/.cache
          key: dependencies-{{ checksum "package.json" }}

  test-answers:
    description: Runs the answers spec file in the given folder
    parameters:
      folder:
        description: Name of the folder, like "01-basic"
        type: string
    steps:
      # we are running just a single answers file in a particular subfolder here
      # if you want to run answers in EVERY subfolder at once use command
      # npx cypress run --spec 'cypress/integration/*/answer.js' --config ignoreTestFiles="",supportFile=cypress/support/reset.js
      - run: npx cypress run --spec 'cypress/integration/<< parameters.folder >>/answer.js' --config ignoreTestFiles="",supportFile=cypress/support/reset.js

  store-test-artifacts:
    description: Saves Cypress screenshots and videos
    steps:
      - store_artifacts:
          path: cypress/screenshots
      - store_artifacts:
          path: cypress/videos

jobs:
  # example test job with 2 commands
  # 1. starts the app in the background
  # 2. runs the tests in a separate command
  two-commands:
    docker:
      # find Docker image at https://github.com/cypress-io/cypress-docker-images
      - image: cypress/base:12.14.0

    working_directory: ~/repo

    steps:
      - checkout
      - restore-cached-dependencies
      - install-dependencies
      - cache-dependencies

      - run:
          name: Start TodoMVC server
          command: npm start
          working_directory: todomvc
          background: true

      - run:
          name: Run Cypress tests
          command: npm test

      - store-test-artifacts

  # alternative:
  #   starts the app and runs tests using a single start-server-and-test command
  single-command:
    docker:
      # find Docker image at https://github.com/cypress-io/cypress-docker-images
      - image: cypress/base:12.14.0

    working_directory: ~/repo

    steps:
      - checkout
      - restore-cached-dependencies
      - install-dependencies
      - cache-dependencies

      - run:
          name: Lint code
          command: npm run lint

      - run: npx cypress info

      - run:
          name: Start and test
          command: npm run ci

      - store-test-artifacts

  # a job that runs through most of the answers to make sure they are correct
  # not all answers can run though without changing plugins or commands files yet
  answers:
    docker:
      # find Docker image at https://github.com/cypress-io/cypress-docker-images
      - image: cypress/base:12.14.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore-cached-dependencies
      - install-dependencies
      - cache-dependencies

      - run:
          name: Start TodoMVC server
          command: npm start
          working_directory: todomvc
          background: true
      - run:
          name: Check the server has started
          command: npx wait-on http://localhost:3000

      # Run specific folders one by one
      - test-answers:
          folder: "01-basic"
      - test-answers:
          folder: "02-adding-items"
      - test-answers:
          folder: "04-reset-state"
      - test-answers:
          folder: "05-xhr"
      - test-answers:
          folder: "06-app-data-store"
      - test-answers:
          folder: "11-retry-ability"
      - test-answers:
          folder: "14-fixtures"

      # For section "13-app-actions" we need to start React application
      - run: ps -a
      - run: pkill npm
      - run:
          name: Start TodoMVC React app
          # and use custom port to avoid clashing with the currently running app
          command: npm run start:react
          background: true
      - run:
          name: Run page object spec
          command: npx cypress run --spec cypress/integration/13-app-actions/po-full-spec.js
      - run:
          name: Run app actions spec
          command: npx cypress run --spec cypress/integration/13-app-actions/app-actions-full-spec.js

      - store-test-artifacts

workflows:
  version: 2
  tests:
    jobs:
      - two-commands
      - single-command
      - answers

      # run tests on Firefox browser using Cypress CircleCI Orb
      # see https://github.com/cypress-io/circleci-orb
      - cypress/run:
          name: using Firefox
          executor: cypress/browsers-chrome78-ff70
          browser: firefox
          start: npm start
          wait-on: 'http://localhost:3000'
          spec: 'cypress/integration/07-ci/*'
          no-workspace: true # since we don't need the workspace after this job
