{"expireTime":9007200881222366000,"key":"gatsby-plugin-mdx-entire-payload-c90a496b975160b825d72803799134b6--undefined","val":{"mdast":{"type":"root","children":[{"type":"code","lang":"graphql","meta":"preview","value":"{\n  site {\n    siteMetadata {\n      title\n      description\n    }\n  }\n}","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":11,"column":4,"offset":95},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Start with the basics, pulling up the site ","position":{"start":{"line":13,"column":1,"offset":97},"end":{"line":13,"column":44,"offset":140},"indent":[]}},{"type":"inlineCode","value":"title","position":{"start":{"line":13,"column":44,"offset":140},"end":{"line":13,"column":51,"offset":147},"indent":[]}},{"type":"text","value":" from your ","position":{"start":{"line":13,"column":51,"offset":147},"end":{"line":13,"column":62,"offset":158},"indent":[]}},{"type":"inlineCode","value":"gatsby-config.js","position":{"start":{"line":13,"column":62,"offset":158},"end":{"line":13,"column":80,"offset":176},"indent":[]}},{"type":"text","value":"’s ","position":{"start":{"line":13,"column":80,"offset":176},"end":{"line":13,"column":83,"offset":179},"indent":[]}},{"type":"inlineCode","value":"siteMetadata","position":{"start":{"line":13,"column":83,"offset":179},"end":{"line":13,"column":97,"offset":193},"indent":[]}},{"type":"text","value":". Here the query is on the left and the results are on the right.","position":{"start":{"line":13,"column":97,"offset":193},"end":{"line":13,"column":162,"offset":258},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":97},"end":{"line":13,"column":162,"offset":258},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Try editing the query to include the ","position":{"start":{"line":15,"column":1,"offset":260},"end":{"line":15,"column":38,"offset":297},"indent":[]}},{"type":"inlineCode","value":"description","position":{"start":{"line":15,"column":38,"offset":297},"end":{"line":15,"column":51,"offset":310},"indent":[]}},{"type":"text","value":" from ","position":{"start":{"line":15,"column":51,"offset":310},"end":{"line":15,"column":57,"offset":316},"indent":[]}},{"type":"inlineCode","value":"siteMetadata","position":{"start":{"line":15,"column":57,"offset":316},"end":{"line":15,"column":71,"offset":330},"indent":[]}},{"type":"text","value":". When typing in the query editor you can use ","position":{"start":{"line":15,"column":71,"offset":330},"end":{"line":15,"column":117,"offset":376},"indent":[]}},{"type":"inlineCode","value":"Ctrl + Space","position":{"start":{"line":15,"column":117,"offset":376},"end":{"line":15,"column":131,"offset":390},"indent":[]}},{"type":"text","value":" to see autocomplete options and ","position":{"start":{"line":15,"column":131,"offset":390},"end":{"line":15,"column":164,"offset":423},"indent":[]}},{"type":"inlineCode","value":"Ctrl + Enter","position":{"start":{"line":15,"column":164,"offset":423},"end":{"line":15,"column":178,"offset":437},"indent":[]}},{"type":"text","value":" to run the current query.","position":{"start":{"line":15,"column":178,"offset":437},"end":{"line":15,"column":204,"offset":463},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":260},"end":{"line":15,"column":204,"offset":463},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Get the Site Title\"}","position":{"start":{"line":18,"column":1,"offset":466},"end":{"line":18,"column":59,"offset":524},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":18,"column":59,"offset":524}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Get the Site Title\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\",\n    \"metastring\": \"preview\",\n    \"preview\": true\n  }, \"{\\n  site {\\n    siteMetadata {\\n      title\\n      description\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Start with the basics, pulling up the site \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" from your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \"\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siteMetadata\"), \". Here the query is on the left and the results are on the right.\"), mdx(\"p\", null, \"Try editing the query to include the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"description\"), \" from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siteMetadata\"), \". When typing in the query editor you can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl + Space\"), \" to see autocomplete options and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl + Enter\"), \" to run the current query.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Get the Site Title\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\",\n        \"metastring\": \"preview\",\n        \"preview\": true\n      }}>{`{\n  site {\n    siteMetadata {\n      title\n      description\n    }\n  }\n}\n`}</code></pre>\n    <p>{`Start with the basics, pulling up the site `}<inlineCode parentName=\"p\">{`title`}</inlineCode>{` from your `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{`’s `}<inlineCode parentName=\"p\">{`siteMetadata`}</inlineCode>{`. Here the query is on the left and the results are on the right.`}</p>\n    <p>{`Try editing the query to include the `}<inlineCode parentName=\"p\">{`description`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`siteMetadata`}</inlineCode>{`. When typing in the query editor you can use `}<inlineCode parentName=\"p\">{`Ctrl + Space`}</inlineCode>{` to see autocomplete options and `}<inlineCode parentName=\"p\">{`Ctrl + Enter`}</inlineCode>{` to run the current query.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}